// noinspection DuplicatedCode

import {TileSet} from "../src/tile_set.js"
import {TileMap} from "../src/tile_map.js"
import {ImageArray} from "../src/image_array.js"
import {project, tileMap, tileMaps, tileSet} from "../src/project.js"
import {Block} from "../src/block.js"
import {Category, Pos, Rule} from "../src/auto_tiling.js"
import {texture} from "../src/system.js"

project.getAssets = () => {
    return {
        texture: ["../data/bricks.png"],
        sound: []
    }
}

export function loadData() {
    tileSet["bricks"] = new TileSet(new ImageArray(texture["bricks"], 4, 14, 0.5, 0.5, 1, 1), [
        1, 1, 1, 0,
        1, 1, 1, 1,
        1, 1, 1, 1,
        1, 1, 1, 1,
        2, 2, 2, 2,
        2, 2, 2, 2,
        2, 2, 2, 2,
        2, 2, 1, 1,
        2, 2, 2, 2,
        2, 2, 2, 2,
        2, 2, 2, 1,
        2, 2, 2, 1,
        0, 0, 0, 0,
        0, 0, 0, 1,
    ], [
        new Block(0, 4, 2, 1, 0), new Block(2, 4, 2, 1, 0),
        new Block(2, 5, 2, 1, 0), new Block(0, 5, 2, 1, 0),
        new Block(0, 6, 2, 1, 0), new Block(2, 6, 2, 1, 0),
        new Block(0, 7, 2, 1, 0), new Block(0, 8, 1, 2, 0),
        new Block(1, 8, 1, 2, 0), new Block(2, 8, 1, 2, 0),
        new Block(3, 8, 1, 2, 0), new Block(2, 10, 1, 2, 0),
        new Block(1, 10, 1, 2, 0), new Block(0, 10, 1, 2, 0),
    ], [
        new Category("blocks", [
            new Rule(3, [new Pos(0, 1), new Pos(1, 0), new Pos(0, -1), new Pos(-1, 0), ]),
            new Rule(0, [new Pos(0, 1), new Pos(-1, 0), new Pos(0, -1), ]),
            new Rule(2, [new Pos(0, -1), new Pos(1, 0), new Pos(0, 1), ]),
            new Rule(7, [new Pos(-1, 0), new Pos(0, -1), new Pos(1, 0), ]),
            new Rule(15, [new Pos(-1, 0), new Pos(0, 1), new Pos(1, 0), ]),
            new Rule(1, [new Pos(0, 1), new Pos(0, -1), ]),
            new Rule(11, [new Pos(-1, 0), new Pos(1, 0), ]),
            new Rule(4, [new Pos(-1, 0), new Pos(0, -1), ]),
            new Rule(6, [new Pos(1, 0), new Pos(0, -1), ]),
            new Rule(12, [new Pos(-1, 0), new Pos(0, 1), ]),
            new Rule(14, [new Pos(0, 1), new Pos(1, 0), ]),
            new Rule(8, [new Pos(-1, 0), ]),
            new Rule(5, [new Pos(0, -1), ]),
            new Rule(10, [new Pos(1, 0), ]),
            new Rule(13, [new Pos(0, 1), ]),
            new Rule(9, []),
        ], false),
    ], -1, [])

    tileMap.brackets = new TileMap(tileSet.bricks, 40, 22, 0, 0, 1, 1, [
        4,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   6,
        11,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  11,
        11,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  11,
        11,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  16,  17,  16,  17,  16,  17,  16,  17,  16,  17,  16,  17,  16,  17,  16,  17,  16,  17,  16,  17,  16,  17,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  11,
        11,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  16,  17,  16,  17,  16,  17,  16,  17,  16,  17,  16,  17,  16,  17,  16,  17,  16,  17,  16,  17,  16,  17,  16,  17,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  11,
        11,  -1,  -1,  -1,  -1,  -1,   0,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   6,  18,  18,   4,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   2,  -1,  -1,  -1,  -1,  -1,  11,
        11,  -1,  -1,  -1,  -1,  -1,  19,  16,  17,  16,  17,  16,  17,  16,  17,  16,  17,  19,  11,  22,  22,  11,  19,  16,  17,  16,  17,  16,  17,  16,  17,  16,  17,  19,  -1,  -1,  -1,  -1,  -1,  11,
        11,  -1,  -1,  -1,  -1,  -1,  16,  17,  16,  17,  16,  17,  16,  17,  16,  17,  16,  17,  11,  18,  18,  11,  16,  17,  16,  17,  16,  17,  16,  17,  16,  17,  16,  17,  -1,  -1,  -1,  -1,  -1,  11,
        11,  -1,  -1,  -1,  -1,  -1,  19,  16,  17,  16,  17,  16,  17,  16,  17,  16,  17,  19,  11,  22,  22,  11,  19,  16,  17,  16,  17,  16,  17,  16,  17,  16,  17,  19,  -1,  -1,  -1,  -1,  -1,  11,
        11,  -1,  -1,  -1,  -1,  -1,  16,  17,  16,  17,  16,  17,  16,  17,  16,  17,  16,  17,  11,  16,  17,  11,  16,  17,  16,  17,  16,  17,  16,  17,  16,  17,  16,  17,  -1,  -1,  -1,  -1,  -1,  11,
        11,  -1,  -1,  -1,  -1,  -1,  19,  16,  17,  16,  17,  16,  17,  16,  17,  16,  17,  19,  11,  18,  18,  11,  19,  16,  17,  16,  17,  16,  17,  16,  17,  16,  17,  19,  -1,  -1,  -1,  -1,  -1,  11,
        11,  -1,  -1,  -1,  -1,  -1,  16,  17,  16,  17,  16,  17,  16,  17,  16,  17,  16,  17,  11,  22,  22,  11,  16,  17,  16,  17,  16,  17,  16,  17,  16,  17,  16,  17,  -1,  -1,  -1,  -1,  -1,  11,
        11,  -1,  -1,  -1,  -1,  -1,  19,  16,  17,  16,  17,  16,  17,  16,  17,  16,  17,  19,  11,  18,  18,  11,  19,  16,  17,  16,  17,  16,  17,  16,  17,  16,  17,  19,  -1,  -1,  -1,  -1,  -1,  11,
        11,  -1,  -1,  -1,  -1,  -1,   0,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,  14,  22,  22,  12,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   2,  -1,  -1,  -1,  -1,  -1,  11,
        11,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  16,  17,  16,  17,  16,  17,  16,  17,  16,  17,  16,  17,  16,  17,  16,  17,  16,  17,  16,  17,  16,  17,  16,  17,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  11,
        11,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  16,  17,  16,  17,  16,  17,  16,  17,  16,  17,  16,  17,  16,  17,  16,  17,  16,  17,  16,  17,  16,  17,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  11,
        11,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  11,
        11,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  11,
        11,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  11,
        11,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  11,
        11,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  11,
        15,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  15,
    ])

    tileMaps.add(tileMap.brackets)
}